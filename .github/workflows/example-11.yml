name: "Example 11: Alternative architectures"

on:
  pull_request:
    branches:
      - "*"
  push:
    branches:
      - "develop"
      - "main"
      - "master"
  schedule:
    # Note that cronjobs run on master/main by default
    - cron: "0 0 * * *"

jobs:
  example-11:
    # prevent cronjobs from running on forks
    if:
      (github.event_name == 'schedule' && github.repository ==
      'conda-incubator/setup-miniconda') || (github.event_name != 'schedule')
    name:
      Ex11 (os=${{ matrix.os }} architecture=${{ matrix.architecture }}
      miniconda-version=${{ matrix.miniconda-version }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "windows-latest"]
        architecture: ["x86"]
        miniconda-version: ["latest"]
    steps:
      - uses: actions/checkout@v4
      - uses: ./
        id: setup-miniconda
        continue-on-error: true
        with:
          architecture: ${{ matrix.architecture }}
          miniconda-version: ${{ matrix.miniconda-version }}
          auto-update-conda: true
          python-version: "3.8"
      - name: Check previous step outcome
        shell: bash
        if: always()
        run: |
          if [[ ${{ matrix.os }} == 'ubuntu-latest' ]]; then
            ${{ steps.setup-miniconda.outcome == 'failure' }}
          else
            ${{ steps.setup-miniconda.outcome == 'success' }}
          fi
      - name: Conda info
        shell: bash -el {0}
        run: conda info
      - name: Conda list
        shell: pwsh
        run: conda list
      - name: Environment
        shell: bash -el {0}
        run: printenv | sort
