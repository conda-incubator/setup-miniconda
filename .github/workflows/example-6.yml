name: "Example 6: Mamba"

on:
  pull_request:
    branches:
      - "*"
  push:
    branches:
      - "develop"
      - "main"
      - "master"
  schedule:
    # Note that cronjobs run on master/main by default
    - cron: "0 0 * * *"

jobs:
  example-6:
    # prevent cronjobs from running on forks
    if:
      (github.event_name == 'schedule' && github.repository ==
      'conda-incubator/setup-miniconda') || (github.event_name != 'schedule')
    name: Ex6 (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "macos-latest", "windows-latest"]
        include:
          - os: ubuntu-latest
            activate-environment: anaconda-client-env
          - os: macos-latest
            activate-environment: /tmp/anaconda-client-env
          - os: windows-latest
            activate-environment: c:\ace
    defaults:
      run:
        shell: bash -el {0}
    steps:
      - uses: actions/checkout@v4
      - uses: ./
        with:
          miniforge-variant: Miniforge3
          python-version: "3.11"
          mamba-version: "*"
          channels: conda-forge,nodefaults
          channel-priority: true
          activate-environment: ${{ matrix.activate-environment }}
          environment-file: etc/example-environment.yml
      - run: |
          conda info
          conda list
          conda config --show-sources
          conda config --show
          printenv | sort

      - name: Universal call (= Windows, no .bat, from Bash)
        run: mamba --version

      - name: Windows, with .bat, from Bash
        if: matrix.os == 'windows-latest'
        run: mamba.bat --version

      - name: Windows, .bat, from Cmd
        shell: cmd /C call {0}
        if: matrix.os == 'windows-latest'
        run: mamba --version
      - name: Windows, no .bat, from Cmd
        shell: cmd /C call {0}
        if: matrix.os == 'windows-latest'
        run: mamba --version

      - name: Windows, .bat, from PowerShell
        shell: pwsh
        if: matrix.os == 'windows-latest'
        run: mamba.bat --version
      - name: Windows, no .bat, from PowerShell
        shell: pwsh
        if: matrix.os == 'windows-latest'
        run: mamba --version
